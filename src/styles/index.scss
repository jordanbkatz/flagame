@use 'variables' as *;
@use 'mixins' as *;

* {
    margin: 0;
    padding: 0;
    box-sizing: border-box;
    border: none;
    outline: none;
    font-family: helvetica;
    font-size: $units * 2;
    color: $text;
    transition: all 250ms linear;
}
body {
    background-color: $primary;
}
#app {
    padding-top: $units * 4;
    width: 100vw;
    @include flex(column, center, flex-start);
}
#stats {
    margin-bottom: $units * 4;
    width: $units * 60;
    height: $units * 15;
    background-color: $secondary;
    @include flex(row, center, space-evenly);
    @include round;
    @include mobile {
        width: calc(100vw - ($units * 8));
    }
    > div {
        height: 100%;
        @include flex(column, center, space-evenly);
        p:last-of-type {
            font-size: $units * 4;
            color: $accent;
        }
    }
}
#flag {
    $aspect-ratio: 0.75;
    margin-bottom: $units * 4;
    width: $units * 60;
    height: $units * 60 * $aspect-ratio;
    @include round;
    @include mobile {
        width: calc(100vw - ($units * 8));
        height: calc((100vw - ($units * 8)) * $aspect-ratio);
    }
}
#choices {
    margin-bottom: $units * 4;
    width: $units * 60;
    flex-wrap: wrap;
    @include flex(row, center, flex-start);
    @include mobile {
        width: calc(100vw - ($units * 8));
    }
    button {
        padding: $units * 4;
        width: 50%;
        height: $units * 15;
        background-color: $secondary;
        @include desktop {
            &:hover {
                background-color: $tertiary;
            }
            &:nth-of-type(1) {
                border-radius: $units 0 0 0;
            }
            &:nth-of-type(2) {
                border-radius: 0 $units 0 0;
            }
            &:nth-of-type(3) {
                border-radius: 0 0 0 $units;
            }
            &:nth-of-type(4) {
                border-radius: 0 0 $units 0;
            }
        }
        @include mobile {
            width: 100%;
            &:first-of-type {
                border-radius: $units $units 0 0;
            }
            &:last-of-type {
                border-radius: 0 0 $units $units;
            }
        }
    }
    .correct {
        background-color: forestgreen;
        &:hover {
            background-color: forestgreen;
        }
    }
    .wrong {
        background-color: crimson;
        &:hover {
            background-color: crimson;
        }
    }
}